name: Generate /tools index

on:
  push:
    branches: [ main ]          # <-- change if your default branch is different
    paths:
      - 'tools/**'
  workflow_dispatch: {}
  schedule:
    - cron: '0 * * * *'         # hourly safety refresh

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show repo status
        run: |
          echo "Branch: $GITHUB_REF"
          echo "PWD: $(pwd)"
          git status
          echo "---- tree ----"
          ls -la
          echo "---- tools/ ----"
          mkdir -p tools
          ls -la tools || true

      - name: Build tools/index.html from current folder contents
        id: build
        shell: bash
        run: |
          set -euo pipefail
          root="tools"
          mkdir -p "$root"

          # Collect .html/.htm directly in /tools (skip index.html itself)
          mapfile -t FILES < <( \
            find "$root" -maxdepth 1 -type f \( -iname '*.html' -o -iname '*.htm' \) \
            ! -iname 'index.html' ! -iname 'index.htm' \
            -printf '%f\n' | sort -f \
          )

          echo "Found ${#FILES[@]} HTML file(s) in /tools:"
          printf ' - %s\n' "${FILES[@]:-<none>}"

          # Helper funcs (inline python for reliable escaping & color)
          PYTHON3=$(command -v python3 || command -v python)
          "$PYTHON3" - <<'PY' "${FILES[@]}"
import sys, os, html, datetime
files = sys.argv[1:]
updated = datetime.datetime.utcnow().replace(microsecond=0).isoformat()+"Z"

def label(s):
    for ext in (".html",".htm",".HTML",".HTM"):
        if s.endswith(ext): return s[:-len(ext)]
    return s
def hue(name):
    h = 2166136261
    for ch in name:
        h ^= ord(ch); h = (h * 16777619) & 0xffffffff
    return h % 360
def gradient(name):
    h = hue(name); h2 = (h + 24) % 360
    return f"linear-gradient(180deg, hsl({h} 75% 46%), hsl({h2} 78% 44%))"

buttons = []
for f in files:
    buttons.append(f'''<a class="tool" href="/tools/{html.escape(f,quote=True)}" target="_blank" rel="noopener"
         style="background:{gradient(f)}">{html.escape(label(f))} ✨</a>''')

html_out = f"""<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8" /><meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="color-scheme" content="light dark" /><title>tools</title>
<style>
:root{{ --bg:#0f1220; --panel:#14182a; --ink:#e9ecf8; --shadow:0 16px 40px rgba(0,0,0,.38) }}
@media (prefers-color-scheme: light){{ :root{{ --bg:#f6f7fb; --panel:#fff; --ink:#0f1426; --shadow:0 18px 40px rgba(12,24,60,.08) }} }}
*{{box-sizing:border-box}} html,body{{height:100%}}
body{{margin:0;color:var(--ink);font-family:-apple-system,system-ui,Segoe UI,Roboto,Helvetica,Arial,Apple Color Emoji,Segoe UI Emoji;
     background:radial-gradient(1200px 520px at 0% -10%, rgba(110,86,207,.25), transparent 60%),
                radial-gradient(900px 360px at 110% 0%, rgba(69,231,179,.20), transparent 60%),var(--bg);
     display:flex;align-items:stretch;justify-content:center}}
.board{{width:100%;max-width:1100px;margin:16px;padding:16px;background:var(--panel);
       border:1px solid rgba(255,255,255,.08);border-radius:18px;box-shadow:var(--shadow)}}
.grid{{display:grid;grid-template-columns:repeat(12,1fr);gap:12px}}
@media (max-width:980px){{.grid{{grid-template-columns:repeat(8,1fr)}}}}
@media (max-width:640px){{.grid{{grid-template-columns:repeat(2,1fr)}}}}
a.tool{{grid-column:span 3;display:inline-flex;align-items:center;justify-content:center;text-decoration:none;text-align:center;
       padding:14px 12px;min-height:56px;border-radius:14px;color:#fff;font-weight:700;letter-spacing:.2px;
       border:1px solid rgba(255,255,255,.12);box-shadow:0 12px 26px rgba(0,0,0,.25);
       transition:transform .06s,box-shadow .12s;word-break:break-word;backdrop-filter:saturate(110%)}}
@media (max-width:980px){{a.tool{{grid-column:span 4}}}} @media (max-width:640px){{a.tool{{grid-column:span 2}}}}
a.tool:hover{{transform:translateY(-1px);box-shadow:0 14px 30px rgba(0,0,0,.30)}}
.tiny{{margin-top:10px;font:12px/1.3 ui-monospace,monospace;color:#9aa3bf;text-align:center;opacity:.85}}
</style></head>
<body>
  <div class="board">
    <div class="grid">
      {''.join(buttons)}
    </div>
    <div class="tiny">Last updated: {html.escape(updated)} • {len(files)} file(s)</div>
  </div>
</body></html>"""
os.makedirs("tools", exist_ok=True)
with open("tools/index.html", "w", encoding="utf-8") as f:
    f.write(html_out)
print(f"Wrote tools/index.html with {len(files)} entries at {updated}")
PY

      - name: Upload generated index for preview
        uses: actions/upload-artifact@v4
        with:
          name: generated-tools-index
          path: tools/index.html

      - name: Commit index.html if changed
        run: |
          if [[ -n "$(git status --porcelain tools/index.html)" ]]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add tools/index.html
            git commit -m "build(tools): regenerate index.html"
            git push
          else
            echo "No changes to commit."
