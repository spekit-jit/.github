name: Tools Safe Check

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]     # change if your default branch differs
    paths:
      - 'tools/**'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Show repo tree and detect tools dir (case-insensitive)
        id: detect
        shell: bash
        run: |
          set -euxo pipefail
          echo "ROOT CONTENTS:"
          ls -la
          TOOLS_DIR=$(find . -maxdepth 1 -type d -iname tools -print -quit)
          if [[ -z "${TOOLS_DIR}" ]]; then
            echo "No tools dir at repo root"; exit 1
          fi
          TOOLS_DIR="${TOOLS_DIR#./}"
          echo "TOOLS_DIR=${TOOLS_DIR}" >> $GITHUB_OUTPUT
          echo "TOOLS_DIR is '${TOOLS_DIR}'"
          echo "TOOLS LISTING:"
          ls -la "${TOOLS_DIR}"

      - name: Find HTML files (direct + one-level subfolders)
        id: find_files
        shell: bash
        run: |
          set -euxo pipefail
          TOOLS_DIR="${{ steps.detect.outputs.TOOLS_DIR }}"
          # Direct .html/.htm (skip index.html)
          find "${TOOLS_DIR}" -maxdepth 1 -type f \( -iname '*.html' -o -iname '*.htm' \) \
            ! -iname 'index.html' ! -iname 'index.htm' -printf '%f\n' | sort -f > /tmp/direct.txt || true
          # One-level subfolder index.*
          find "${TOOLS_DIR}" -maxdepth 2 -mindepth 2 -type f \( -iname 'index.html' -o -iname 'index.htm' \) \
            -printf '%P\n' | sort -f > /tmp/subidx.txt || true
          echo "DIRECT FILES:"; cat /tmp/direct.txt || true
          echo "SUBFOLDER INDEX:"; cat /tmp/subidx.txt || true

      - name: Build static /tools/index.html (no commit, no deploy)
        shell: bash
        run: |
          set -euxo pipefail
          TOOLS_DIR="${{ steps.detect.outputs.TOOLS_DIR }}"
          mkdir -p "${TOOLS_DIR}"
          mapfile -t DIRECT < /tmp/direct.txt || true
          mapfile -t SUBIDX < /tmp/subidx.txt || true

          python3 - <<'PY' "${TOOLS_DIR}" "${DIRECT[@]}" "::SEP::" "${SUBIDX[@]}"
import sys, os, html, datetime
tools_dir = sys.argv[1]
rest = sys.argv[2:]
i = rest.index("::SEP::")
direct = rest[:i]
subidx  = rest[i+1:]
updated = datetime.datetime.utcnow().replace(microsecond=0).isoformat()+"Z"
def label(n):
  for ext in (".html",".htm",".HTML",".HTM"):
    if n.endswith(ext): return n[:-len(ext)]
  return n
def hue(s):
  h=2166136261
  for ch in s: h^=ord(ch); h=(h*16777619)&0xffffffff
  return h%360
def grad(k):
  h=hue(k); h2=(h+24)%360
  return f"linear-gradient(180deg, hsl({h} 75% 46%), hsl({h2} 78% 44%))"
buttons=[]
for f in direct:
  buttons.append(f'<a class="tool" href="/{tools_dir}/{html.escape(f)}" target="_blank" rel="noopener" style="background:{grad(f)}">{html.escape(label(f))} ✨</a>')
for p in subidx:
  folder=p.split('/',1)[0]
  buttons.append(f'<a class="tool" href="/{tools_dir}/{html.escape(folder)}/" target="_blank" rel="noopener" style="background:{grad(folder)}">{html.escape(folder)} ✨</a>')
buttons.sort(key=lambda s: s.split('>')[2].rsplit(' ✨',1)[0].lower())
html_out=f"""<!DOCTYPE html><html lang="en"><head>
<meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>tools</title><meta name="color-scheme" content="light dark"/>
<style>
:root{{--bg:#0f1220;--panel:#14182a;--ink:#e9ecf8}}
body{{margin:0;background:radial-gradient(1200px 520px at 0% -10%, rgba(110,86,207,.25), transparent 60%),radial-gradient(900px 360px at 110% 0%, rgba(69,231,179,.20), transparent 60%),var(--bg);color:var(--ink);font-family:-apple-system,system-ui,Segoe UI,Roboto;display:flex;justify-content:center}}
.board{{max-width:1100px;margin:16px;padding:16px;background:#14182a;border-radius:18px;border:1px solid rgba(255,255,255,.08)}}
.grid{{display:grid;grid-template-columns:repeat(12,1fr);gap:12px}}
@media (max-width:980px){{.grid{{grid-template-columns:repeat(8,1fr)}}}}
@media (max-width:640px){{.grid{{grid-template-columns:repeat(2,1fr)}}}}
a.tool{{grid-column:span 3;display:flex;align-items:center;justify-content:center;min-height:56px;padding:14px 12px;color:#fff;text-decoration:none;border-radius:14px;border:1px solid rgba(255,255,255,.12)}}
.tiny{{margin-top:10px;font:12px ui-monospace,monospace;color:#9aa3bf;text-align:center}}
</style></head><body><div class="board"><div class="grid">{''.join(buttons)}</div>
<div class="tiny">Last updated: {html.escape(updated)} • {len(buttons)} link(s)</div></div></body></html>"""
os.makedirs(tools_dir, exist_ok=True)
with open(os.path.join(tools_dir,"index.html"),"w",encoding="utf-8") as f: f.write(html_out)
print(f"Wrote {os.path.join(tools_dir,'index.html')} with {len(buttons)} links")
PY

      - name: Upload generated file
        uses: actions/upload-artifact@v4
        with:
          name: tools-index-preview
          path: ${{ steps.detect.outputs.TOOLS_DIR }}/index.html
