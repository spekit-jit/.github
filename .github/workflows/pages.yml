name: Build & Deploy Pages (tools)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Copy repo into _site
        run: |
          rm -rf _site
          mkdir -p _site
          shopt -s dotglob
          cp -r * _site || true

      - name: Generate tools index
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const root = path.join('_site','tools');
            if (!fs.existsSync(root)) fs.mkdirSync(root, { recursive: true });

            const entries = fs.existsSync(root) ? fs.readdirSync(root, { withFileTypes: true }) : [];

            const direct = entries
              .filter(e => e.isFile() && /\.html?$/i.test(e.name) && !/^index\.html?$/i.test(e.name))
              .map(e => e.name).sort();

            const subidx = entries
              .filter(e => e.isDirectory())
              .map(d => {
                const p1 = path.join(root,d.name,'index.html');
                const p2 = path.join(root,d.name,'index.htm');
                return (fs.existsSync(p1) || fs.existsSync(p2)) ? d.name : null;
              })
              .filter(Boolean).sort();

            const label = s => s.replace(/\.html?$/i,'');
            const hue = s => { let h=2166136261>>>0; for(const ch of s){ h^=ch.charCodeAt(0); h=Math.imul(h,16777619)>>>0 } return h%360; };
            const grad = k => { const h=hue(k), h2=(h+24)%360; return `linear-gradient(180deg,hsl(${h} 75% 46%),hsl(${h2} 78% 44%))`; };
            const btn  = (href,text,key)=>`<a class="tool" href="${href}" target="_blank" rel="noopener" style="background:${grad(key)}">${text} ✨</a>`;

            const buttons = [
              ...direct.map(f=>btn(`/tools/${encodeURIComponent(f)}`, label(f), f)),
              ...subidx.map(d=>btn(`/tools/${encodeURIComponent(d)}/`, d, d)),
            ].sort();

            const updated = new Date().toISOString().replace(/\.\d{3}Z$/,'Z');

            const html = `<!DOCTYPE html>
            <html lang="en"><head>
            <meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"/>
            <title>tools</title><meta name="color-scheme" content="light dark"/>
            <style>
            body{margin:0;font-family:-apple-system,system-ui,Segoe UI,Roboto;background:#0f1220;color:#e9ecf8;display:flex;justify-content:center}
            .board{max-width:1000px;margin:16px;padding:16px;background:#14182a;border-radius:12px}
            .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));gap:12px}
            a.tool{display:flex;align-items:center;justify-content:center;padding:14px 12px;min-height:56px;border-radius:10px;
                   color:#fff;text-decoration:none;font-weight:600}
            a.tool:hover{opacity:.9}
            .tiny{margin-top:10px;font:12px monospace;color:#9aa3bf;text-align:center}
            </style></head>
            <body><div class="board"><div class="grid">
            ${buttons.join('')}
            </div><div class="tiny">Last updated: ${updated} • ${buttons.length} link(s)</div></div></body></html>`;

            fs.writeFileSync(path.join(root,'index.html'), html);
            core.info(`Wrote _site/tools/index.html with ${buttons.length} links`);

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
